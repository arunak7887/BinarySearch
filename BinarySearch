package binarySearch;

public class BinarySearch {  
    static int binarySearch(int a[], int beg, int end, int val)    
    {    
        int mid;    
        if(end >= beg)     
        {  
            mid = (beg + end)/2;    
            if(a[mid] == val)    
            {    
                return mid+1;  /* if the item to be searched is present at middle  
*/  
            }    
            /* if the item to be searched is smaller than middle, then it can only  
be in left subarray */  
            else if(a[mid] < val)     
            {  
                return binarySearch(a, mid+1, end, val);    
            }    
            /* if the item to be searched is greater than middle, then it can only be  
             * in right subarray */  
            else    
            {  
                return binarySearch(a, beg, mid-1, val);    
            }    
        }    
        return -1;    
    }   
    public static void main(String args[]) {  
        int a[] = {8, 10, 22, 27, 37, 44, 49, 55, 69}; // given array  
        int val = 3; // value to be searched  
        int n = a.length; // size of array  
        int res = binarySearch(a, 0, n-1, val); // Store result  
     
 
        if (res == -1)  
        System.out.println("-1");  
        else  
        System.out.println(res);  
    }  
    }  
